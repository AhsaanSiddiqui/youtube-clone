import React, { useState } from 'react'
import SettingsLayout from '../../components/SettingsLayout'

const Playback = ({ sidebarExpanded }) => {
  const [settings, setSettings] = useState({
    infoCards: true,
    alwaysShowCaptions: true,
    autoGeneratedCaptions: false,
    av1Setting: 'auto', // 'auto', 'preferSD', 'always'
    videoPreviews: true
  })

  const handleToggle = (key) => {
    setSettings(prev => ({
      ...prev,
      [key]: !prev[key]
    }))
  }

  const handleRadioChange = (value) => {
    setSettings(prev => ({
      ...prev,
      av1Setting: value
    }))
  }

  return (
    <SettingsLayout sidebarExpanded={sidebarExpanded}>
      <div className="flex items-start justify-between mb-8">
        <div>
          <h1 className="text-3xl font-bold text-gray-900 mb-2">Playback and performance</h1>
          <p className="text-lg text-gray-600">Control your video viewing experience</p>
          <p className="text-sm text-gray-500 mt-2">Playback settings apply to this browser only</p>
        </div>
        <div className="w-24 h-24 bg-purple-100 rounded-full flex items-center justify-center">
          <div className="w-16 h-16 bg-purple-200 rounded-full flex items-center justify-center">
            <svg className="w-8 h-8 text-purple-600" fill="currentColor" viewBox="0 0 24 24">
              <path d="M8 5v14l11-7z"/>
            </svg>
          </div>
        </div>
      </div>

      {/* Info Cards Section */}
      <div className="bg-white border border-gray-200 rounded-lg p-6 mb-6">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center gap-2">
            <input 
              type="checkbox" 
              id="infoCards"
              checked={settings.infoCards}
              onChange={() => handleToggle('infoCards')}
              className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
            />
            <label htmlFor="infoCards" className="text-sm font-medium text-gray-900">Show in-video info cards</label>
            <svg className="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"/>
            </svg>
          </div>
        </div>
      </div>

      {/* Subtitles and Closed Captions Section */}
      <div className="bg-white border border-gray-200 rounded-lg p-6 mb-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Subtitles and Closed Captions</h2>
        
        <div className="space-y-4">
          <div className="flex items-center gap-2">
            <input 
              type="checkbox" 
              id="alwaysShowCaptions"
              checked={settings.alwaysShowCaptions}
              onChange={() => handleToggle('alwaysShowCaptions')}
              className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
            />
            <label htmlFor="alwaysShowCaptions" className="text-sm font-medium text-gray-900">Always show captions</label>
          </div>
          
          <div className="flex items-center gap-2">
            <input 
              type="checkbox" 
              id="autoGeneratedCaptions"
              checked={settings.autoGeneratedCaptions}
              onChange={() => handleToggle('autoGeneratedCaptions')}
              className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
            />
            <label htmlFor="autoGeneratedCaptions" className="text-sm font-medium text-gray-900">Include auto-generated captions (when available)</label>
          </div>
        </div>
      </div>

      {/* AV1 Settings Section */}
      <div className="bg-white border border-gray-200 rounded-lg p-6 mb-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">AV1 settings</h2>
        
        <div className="space-y-3">
          <div className="flex items-center gap-2">
            <input 
              type="radio" 
              id="av1Auto"
              name="av1Setting"
              value="auto"
              checked={settings.av1Setting === 'auto'}
              onChange={() => handleRadioChange('auto')}
              className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500"
            />
            <label htmlFor="av1Auto" className="text-sm font-medium text-gray-900">Auto (recommended)</label>
            <svg className="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"/>
            </svg>
          </div>
          
          <div className="flex items-center gap-2">
            <input 
              type="radio" 
              id="av1PreferSD"
              name="av1Setting"
              value="preferSD"
              checked={settings.av1Setting === 'preferSD'}
              onChange={() => handleRadioChange('preferSD')}
              className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500"
            />
            <label htmlFor="av1PreferSD" className="text-sm font-medium text-gray-900">Prefer AV1 for SD</label>
            <svg className="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"/>
            </svg>
          </div>
          
          <div className="flex items-center gap-2">
            <input 
              type="radio" 
              id="av1Always"
              name="av1Setting"
              value="always"
              checked={settings.av1Setting === 'always'}
              onChange={() => handleRadioChange('always')}
              className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500"
            />
            <label htmlFor="av1Always" className="text-sm font-medium text-gray-900">Always prefer AV1</label>
            <svg className="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"/>
            </svg>
          </div>
        </div>
      </div>

      {/* Browsing Section */}
      <div className="bg-white border border-gray-200 rounded-lg p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Browsing</h2>
        
        <div className="flex items-center justify-between mb-2">
          <span className="text-sm font-medium text-gray-900">Video previews</span>
          <button 
            onClick={() => handleToggle('videoPreviews')}
            className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
              settings.videoPreviews ? 'bg-blue-600' : 'bg-gray-200'
            }`}
          >
            <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
              settings.videoPreviews ? 'translate-x-6' : 'translate-x-1'
            }`} />
          </button>
        </div>
        <p className="text-sm text-gray-500">Video previews will play when you hover over thumbnails</p>
      </div>
    </SettingsLayout>
  )
}

export default Playback
